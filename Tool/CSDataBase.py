from Content import Content


def WriteDataBase(path: str) -> None:
    content = Content()
    content.WriteLine("using System;")
    content.WriteLine("using System.Collections.Generic;")
    content.WriteLine("using System.IO;")
    content.WriteLine("using UnityEngine;")
    content.WriteLine("namespace Config")
    content.StartBlock()
    content.WriteLine("public class Vec3Vec")
    content.StartBlock()
    content.WriteLine("public int x = 0;")
    content.WriteLine("public int y = 0;")
    content.WriteLine("public int z = 0;")
    content.EndBlock()
    content.WriteLine("public class DataBase")
    content.StartBlock()
    content.WriteLine("#if UNITY_EDITOR || UNITY_STANDALONE_WIN ")
    content.WriteLine("private static string DefaultFolder = Path.Combine(Application.streamingAssetsPath,\"Bin/\");")
    content.WriteLine("#elif  UNITY_IOS || UNITY_ANDROID")
    content.WriteLine("private static string DefaultFolder = Path.Combine(Application.persistentDataPath,\"Bin/\");")
    content.WriteLine("#endif")
    content.WriteLine("public static Stream OpenData(string fileName)")
    content.StartBlock()
    content.WriteLine("var filePath = DefaultFolder + fileName;")
    content.WriteLine("#if UNITY_EDITOR || UNITY_STANDALONE_WIN || UNITY_IOS")
    content.WriteLine("filePath = filePath.Replace(\"file://\", \"\");")
    content.WriteLine("#elif UNITY_ANDROID")
    content.WriteLine("filePath = filePath.Replace(\"file://\", \"\");")
    content.WriteLine("#endif")
    content.WriteLine("return OpenFileStream(filePath);")
    content.EndBlock()
    content.WriteLine("public static System.IO.Stream OpenFileStream(string fullPath)")
    content.StartBlock()
    content.WriteLine("long streamLength = 0;")
    content.WriteLine("return OpenFileStream(fullPath, out streamLength);")
    content.EndBlock()
    content.WriteLine("public static System.IO.Stream OpenFileStream(string fullPath, out long streamLength)")
    content.StartBlock()
    content.WriteLine("Stream filestream = null;")
    content.WriteLine("streamLength = 0;")
    content.WriteLine("try")
    content.StartBlock()
    content.WriteLine("filestream = File.OpenRead(fullPath);")
    content.WriteLine("streamLength = filestream.Length;")
    content.WriteLine("return filestream;")
    content.EndBlock()
    content.WriteLine("catch (Exception e)")
    content.StartBlock()
    content.WriteLine("filestream = null;")
    content.WriteLine("UnityEngine.Debug.LogException(e);")
    content.EndBlock()
    content.WriteLine("return filestream;")
    content.EndBlock()
    content.WriteLine("public virtual void Load(BinaryReader pStream) { }")
    content.WriteLine("public static void ReadIntList(BinaryReader pStream, ref List<int> intList)")
    content.StartBlock()
    content.WriteLine("int num = pStream.ReadInt32();")
    content.WriteLine("for (int i = 0; i < num; i++)")
    content.StartBlock()
    content.WriteLine("if (intList == null)")
    content.StartBlock()
    content.WriteLine("intList = new List<int>();")
    content.EndBlock()
    content.WriteLine("intList.Add(pStream.ReadInt32());")
    content.EndBlock()
    content.EndBlock()
    content.WriteLine(" public static void ReadShortList(BinaryReader pStream, ref List<short> intList)")
    content.StartBlock()
    content.WriteLine("int num = pStream.ReadInt16();")
    content.WriteLine("for (int i = 0; i < num; i++)")
    content.StartBlock()
    content.WriteLine("if (intList == null)")
    content.StartBlock()
    content.WriteLine("intList = new List<short>();")
    content.EndBlock()
    content.WriteLine("intList.Add(pStream.ReadInt16());")
    content.EndBlock()
    content.EndBlock()
    content.WriteLine("public static void ReadByteList(BinaryReader pStream, ref List<sbyte> intList)")
    content.StartBlock()
    content.WriteLine("int num = pStream.ReadInt16();")
    content.WriteLine("for (int i = 0; i < num; i++)")
    content.StartBlock()
    content.WriteLine("if (intList == null)")
    content.StartBlock()
    content.WriteLine("intList = new List<sbyte>();")
    content.EndBlock()
    content.WriteLine("intList.Add(pStream.ReadSByte());")
    content.EndBlock()
    content.EndBlock()
    content.WriteLine("public static void ReadFloatList(BinaryReader pStream, ref List<float> intList)")
    content.StartBlock()
    content.WriteLine("int num = pStream.ReadInt16();")
    content.WriteLine("for (int i = 0; i < num; i++)")
    content.StartBlock()
    content.WriteLine("if (intList == null)")
    content.StartBlock()
    content.WriteLine("intList = new List<float>();")
    content.EndBlock()
    content.WriteLine("intList.Add(pStream.ReadSingle());")
    content.EndBlock()
    content.EndBlock()
    content.WriteLine("public static void ReadStringList(BinaryReader pStream, ref List<string> strList)")
    content.StartBlock()
    content.WriteLine("int num = pStream.ReadInt16();")
    content.WriteLine("for (int i = 0; i < num; i++)")
    content.StartBlock()
    content.WriteLine("if (strList == null)")
    content.StartBlock()
    content.WriteLine("strList = new List<string>();")
    content.EndBlock()
    content.WriteLine("strList.Add(pStream.ReadString());")
    content.EndBlock()
    content.EndBlock()
    content.WriteLine("public static void ReadIntDictionary(BinaryReader pStream, ref Dictionary<int, int> intDictionary)")
    content.StartBlock()
    content.WriteLine("int num = pStream.ReadInt16();")
    content.WriteLine("for (int i = 0; i < num; i++)")
    content.StartBlock()
    content.WriteLine("if (intDictionary == null)")
    content.StartBlock()
    content.WriteLine("intDictionary = new Dictionary<int, int>();")
    content.EndBlock()
    content.WriteLine("intDictionary[pStream.ReadInt32()] = pStream.ReadInt32();")
    content.EndBlock()
    content.EndBlock()
    content.WriteLine("public static void ReadByteListList(BinaryReader pStream, ref List<List<sbyte>> intListList)")
    content.StartBlock()
    content.WriteLine("int listNum = pStream.ReadInt16();")
    content.WriteLine("for (int i = 0; i < listNum; i++)")
    content.StartBlock()
    content.WriteLine("if (intListList == null)")
    content.StartBlock()
    content.WriteLine("intListList = new List<List<sbyte>>();")
    content.EndBlock()
    content.WriteLine("int intNum = pStream.ReadInt16();")
    content.WriteLine("List<sbyte> intData = new List<sbyte>();")
    content.WriteLine("for (int j = 0; j < intNum; j++)")
    content.StartBlock()
    content.WriteLine("intData.Add(pStream.ReadSByte());")
    content.EndBlock()
    content.WriteLine("intListList.Add(intData);")
    content.EndBlock()
    content.EndBlock()
    content.WriteLine("public static void ReadShortListList(BinaryReader pStream, ref List<List<short>> intListList)")
    content.StartBlock()
    content.WriteLine("int listNum = pStream.ReadInt16();")
    content.WriteLine("for (int i = 0; i < listNum; i++)")
    content.StartBlock()
    content.WriteLine("if (intListList == null)")
    content.StartBlock()
    content.WriteLine("intListList = new List<List<short>>();")
    content.EndBlock()
    content.WriteLine("int intNum = pStream.ReadInt16();")
    content.WriteLine("List<short> intData = new List<short>();")
    content.WriteLine("for (int j = 0; j < intNum; j++)")
    content.StartBlock()
    content.WriteLine("intData.Add(pStream.ReadInt16());")
    content.EndBlock()
    content.WriteLine("intListList.Add(intData);")
    content.EndBlock()
    content.EndBlock()
    content.WriteLine("public static void ReadIntListList(BinaryReader pStream, ref List<List<int>> intListList)")
    content.StartBlock()
    content.WriteLine("int listNum = pStream.ReadInt16();")
    content.WriteLine("for (int i = 0; i < listNum; i++)")
    content.StartBlock()
    content.WriteLine("if (intListList == null)")
    content.StartBlock()
    content.WriteLine("intListList = new List<List<int>>();")
    content.EndBlock()
    content.WriteLine("int intNum = pStream.ReadInt16();")
    content.WriteLine("List<int> intData = new List<int>();")
    content.WriteLine("for (int j = 0; j < intNum; j++)")
    content.StartBlock()
    content.WriteLine("intData.Add(pStream.ReadInt32());")
    content.EndBlock()
    content.WriteLine("intListList.Add(intData);")
    content.EndBlock()
    content.EndBlock()
    content.WriteLine("public static void ReadFloatListList(BinaryReader pStream, ref List<List<float>> floatListList)")
    content.StartBlock()
    content.WriteLine("int listNum = pStream.ReadInt16();")
    content.WriteLine("for (int i = 0; i < listNum; i++)")
    content.StartBlock()
    content.WriteLine("if (floatListList == null)")
    content.StartBlock()
    content.WriteLine("floatListList = new List<List<float>>();")
    content.EndBlock()
    content.WriteLine("int floatNum = pStream.ReadInt16();")
    content.WriteLine("List<float> floatData = new List<float>();")
    content.WriteLine("for (int j = 0; j < floatNum; j++)")
    content.StartBlock()
    content.WriteLine("floatData.Add(pStream.ReadSingle());")
    content.EndBlock()
    content.WriteLine("floatListList.Add(floatData);")
    content.EndBlock()
    content.EndBlock()
    content.WriteLine("public object GetValue(string propertyName)")
    content.StartBlock()
    content.WriteLine("var info = this.GetType().GetProperty(propertyName);")
    content.WriteLine("if (info != null)")
    content.StartBlock()
    content.WriteLine("return info.GetValue(this, null);")
    content.EndBlock()
    content.WriteLine("else")
    content.StartBlock()
    content.WriteLine("return null;")
    content.EndBlock()
    content.EndBlock()
    content.WriteLine("public static void ReadVec3VecList(BinaryReader pStream, ref List<Vec3Vec> Vec3VecList)")
    content.StartBlock()
    content.WriteLine("int listNum = pStream.ReadInt16();")
    content.WriteLine("if (Vec3VecList == null)")
    content.StartBlock()
    content.WriteLine("Vec3VecList = new List<Vec3Vec>();")
    content.EndBlock()
    content.WriteLine("for (int i = 0; i < listNum; ++i)")
    content.StartBlock()
    content.WriteLine("Vec3Vec data = new Vec3Vec();")
    content.WriteLine("data.x = pStream.ReadInt32();")
    content.WriteLine("data.y = pStream.ReadInt32();")
    content.WriteLine("data.z = pStream.ReadInt32();")
    content.WriteLine("Vec3VecList.Add(data);")
    content.EndBlock()
    content.EndBlock()
    content.WriteLine("public static void ReadVec3Vec(BinaryReader pStream, ref Vec3Vec Vec3Vect)")
    content.StartBlock()
    content.WriteLine("if (Vec3Vect == null)")
    content.StartBlock()
    content.WriteLine("Vec3Vect = new Vec3Vec();")
    content.EndBlock()
    content.WriteLine("Vec3Vect.x = pStream.ReadInt32();")
    content.WriteLine("Vec3Vect.y = pStream.ReadInt32();")
    content.WriteLine("Vec3Vect.z = pStream.ReadInt32();")
    content.EndBlock()
    content.WriteLine("public static string ReadUTF8String(BinaryReader pStream)")
    content.StartBlock()
    content.WriteLine("int num = pStream.ReadInt16();")
    content.WriteLine("if (num < 1)")
    content.StartBlock()
    content.WriteLine("return string.Empty;")
    content.EndBlock()
    content.WriteLine("else")
    content.StartBlock()
    content.WriteLine("byte[] byteArray = pStream.ReadBytes(num);")
    content.WriteLine("return System.Text.Encoding.UTF8.GetString(byteArray);")
    content.EndBlock()
    content.EndBlock()
    content.EndBlock()
    content.EndBlock()
    content.WriteFile(path + "/DataBase.cs")
